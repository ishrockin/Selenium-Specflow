// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowDemo
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("GraffitiFlyPosting", Description="        As anyone \r\n\t\tI want to report some graffiti / fly-posting \r\n\t\tSo that I " +
        "don\'t have to look at it \r\n\r\n\t\tAs the council \r\n\t\tI want to make sure I only rec" +
        "eive what I consider to be valid reports \r\n\t\tSo that I can manage my workload an" +
        "d costs ", SourceFile="GraffitiFlyPosting.feature", SourceLine=0)]
    public partial class GraffitiFlyPostingFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GraffitiFlyPosting.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GraffitiFlyPosting", "        As anyone \r\n\t\tI want to report some graffiti / fly-posting \r\n\t\tSo that I " +
                    "don\'t have to look at it \r\n\r\n\t\tAs the council \r\n\t\tI want to make sure I only rec" +
                    "eive what I consider to be valid reports \r\n\t\tSo that I can manage my workload an" +
                    "d costs ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Public Road / Building", SourceLine=9)]
        public virtual void Graffiti_PublicRoadBuilding()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Public Road / Building", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
        testRunner.And("they click on the next button after selecting the problem source as public buildi" +
                    "ng / wall", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
        testRunner.And("They choose report type as graffiti", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Private Road / Building", SourceLine=18)]
        public virtual void Graffiti_PrivateRoadBuilding()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Private Road / Building", ((string[])(null)));
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
        testRunner.And("they click on the next button after selecting the problem source as private build" +
                    "ing / wall", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
        testRunner.And("They choose report type as graffiti", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
        testRunner.When("They report it to be Non offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Monument", SourceLine=27)]
        public virtual void Graffiti_Monument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Monument", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
        testRunner.And("they click on the next button after selecting the problem source as Monument", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
        testRunner.And("They choose report type as graffiti", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Street Bench", SourceLine=36)]
        public virtual void Graffiti_StreetBench()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Street Bench", ((string[])(null)));
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
        testRunner.And("they click on the next button after selecting the problem source as Street Bench", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
        testRunner.And("They choose report type as graffiti", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
        testRunner.When("They report it to be Non offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Street Litter Bin", SourceLine=45)]
        public virtual void Graffiti_StreetLitterBin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Street Litter Bin", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 47
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
        testRunner.And("they click on the next button after selecting the problem source as Street Litter" +
                    " Bin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
        testRunner.And("They choose report type as graffiti", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Car Park", SourceLine=54)]
        public virtual void Graffiti_CarPark()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Car Park", ((string[])(null)));
#line 55
this.ScenarioSetup(scenarioInfo);
#line 56
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
        testRunner.And("they click on the next button after selecting the problem source as Car Park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
        testRunner.And("They choose report type as graffiti", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
        testRunner.When("They report it to be Non offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Park", SourceLine=63)]
        public virtual void Graffiti_Park()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Park", ((string[])(null)));
#line 64
this.ScenarioSetup(scenarioInfo);
#line 65
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
        testRunner.And("they click on the next button after selecting the problem source as Park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
        testRunner.And("They choose report type as graffiti", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fly Posting - Public Road / Building", SourceLine=72)]
        public virtual void FlyPosting_PublicRoadBuilding()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fly Posting - Public Road / Building", ((string[])(null)));
#line 73
this.ScenarioSetup(scenarioInfo);
#line 74
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
        testRunner.And("they click on the next button after selecting the problem source as public buildi" +
                    "ng / wall", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
        testRunner.And("They choose report type as Fly Posting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fly Posting - Private Road / Building", SourceLine=81)]
        public virtual void FlyPosting_PrivateRoadBuilding()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fly Posting - Private Road / Building", ((string[])(null)));
#line 82
this.ScenarioSetup(scenarioInfo);
#line 83
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 84
        testRunner.And("they click on the next button after selecting the problem source as private build" +
                    "ing / wall", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
        testRunner.And("They choose report type as Fly Posting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
        testRunner.When("They report it to be Non offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fly Posting - Monument", SourceLine=90)]
        public virtual void FlyPosting_Monument()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fly Posting - Monument", ((string[])(null)));
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
        testRunner.And("they click on the next button after selecting the problem source as Monument", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
        testRunner.And("They choose report type as Fly Posting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fly Posting - Street Bench", SourceLine=99)]
        public virtual void FlyPosting_StreetBench()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fly Posting - Street Bench", ((string[])(null)));
#line 100
this.ScenarioSetup(scenarioInfo);
#line 101
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 102
        testRunner.And("they click on the next button after selecting the problem source as Street Bench", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
        testRunner.And("They choose report type as Fly Posting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
        testRunner.When("They report it to be Non offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fly Posting - Street Litter Bin", SourceLine=108)]
        public virtual void FlyPosting_StreetLitterBin()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fly Posting - Street Litter Bin", ((string[])(null)));
#line 109
this.ScenarioSetup(scenarioInfo);
#line 110
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
        testRunner.And("they click on the next button after selecting the problem source as Street Litter" +
                    " Bin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
        testRunner.And("They choose report type as Fly Posting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fly Posting - Car Park", SourceLine=117)]
        public virtual void FlyPosting_CarPark()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fly Posting - Car Park", ((string[])(null)));
#line 118
this.ScenarioSetup(scenarioInfo);
#line 119
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
        testRunner.And("they click on the next button after selecting the problem source as Car Park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
        testRunner.And("They choose report type as Fly Posting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
        testRunner.When("They report it to be Non offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fly Posting - Park", SourceLine=126)]
        public virtual void FlyPosting_Park()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fly Posting - Park", ((string[])(null)));
#line 127
this.ScenarioSetup(scenarioInfo);
#line 128
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 129
        testRunner.And("they click on the next button after selecting the problem source as Park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
        testRunner.When("User enters the location, clicks next & adds more location details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 131
        testRunner.And("They choose report type as Fly Posting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
        testRunner.When("They report it to be offensive", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
        testRunner.And("They enter the relevant details on the information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
        testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Housing estate", SourceLine=135)]
        public virtual void Graffiti_HousingEstate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Housing estate", ((string[])(null)));
#line 136
this.ScenarioSetup(scenarioInfo);
#line 137
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 138
        testRunner.And("they click on the next button after selecting the problem source as Housing estat" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
        testRunner.Then("they get a confirmation screen with alternative contact details & the case number" +
                    " as council is not responsible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Bus Stop", SourceLine=140)]
        public virtual void Graffiti_BusStop()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Bus Stop", ((string[])(null)));
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
        testRunner.And("they click on the next button after selecting the problem source as Bus Stop", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
        testRunner.Then("they get a confirmation screen with alternative contact details & the case number" +
                    " as council is not responsible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Post Box", SourceLine=145)]
        public virtual void Graffiti_PostBox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Post Box", ((string[])(null)));
#line 146
this.ScenarioSetup(scenarioInfo);
#line 147
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
        testRunner.And("they click on the next button after selecting the problem source as Post Box", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
        testRunner.Then("they get a confirmation screen with alternative contact details & the case number" +
                    " as council is not responsible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Telephone Box", SourceLine=150)]
        public virtual void Graffiti_TelephoneBox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Telephone Box", ((string[])(null)));
#line 151
this.ScenarioSetup(scenarioInfo);
#line 152
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 153
        testRunner.And("they click on the next button after selecting the problem source as Telephone Box" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
        testRunner.Then("they get a confirmation screen with alternative contact details & the case number" +
                    " as council is not responsible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Street Cabinet", SourceLine=155)]
        public virtual void Graffiti_StreetCabinet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Street Cabinet", ((string[])(null)));
#line 156
this.ScenarioSetup(scenarioInfo);
#line 157
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 158
        testRunner.And("they click on the next button after selecting the problem source as Street Cabine" +
                    "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
        testRunner.Then("they get a confirmation screen with alternative contact details & the case number" +
                    " as council is not responsible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Train Station / Bridge", SourceLine=160)]
        public virtual void Graffiti_TrainStationBridge()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Train Station / Bridge", ((string[])(null)));
#line 161
this.ScenarioSetup(scenarioInfo);
#line 162
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 163
        testRunner.And("they click on the next button after selecting the problem source as Train Station" +
                    " / Bridge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
        testRunner.Then("they get a confirmation screen with alternative contact details & the case number" +
                    " as council is not responsible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Graffiti - Somewhere else", SourceLine=165)]
        public virtual void Graffiti_SomewhereElse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Graffiti - Somewhere else", ((string[])(null)));
#line 166
this.ScenarioSetup(scenarioInfo);
#line 167
        testRunner.Given("User is on the Report Graffiti / Fly posting Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
        testRunner.And("they click on the next button after selecting the problem source as Somewhere els" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
        testRunner.Then("they get a confirmation screen with alternative contact details & the case number" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowDemo
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("ReportDirtyArea", Description="\tAs anyone\r\n\tI want to request cleaning of a dirty location\r\n\tSo that the general" +
        " environment is more pleasant for me", SourceFile="ReportDirtyArea.feature", SourceLine=0)]
    public partial class ReportDirtyAreaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ReportDirtyArea.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ReportDirtyArea", "\tAs anyone\r\n\tI want to request cleaning of a dirty location\r\n\tSo that the general" +
                    " environment is more pleasant for me", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Public Road", new string[] {
                "mytag1"}, SourceLine=6)]
        public virtual void ReportDirtyAreaPublicRoad()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Public Road", new string[] {
                        "mytag1"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And("they click on the next button after selecting the problem source as public road", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When("User enters the Dirty Area location & clicks next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.And("They enter the relevant details on the public road information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Public Road - Dead Animal", new string[] {
                "mytag1"}, SourceLine=15)]
        public virtual void ReportDirtyAreaPublicRoad_DeadAnimal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Public Road - Dead Animal", new string[] {
                        "mytag1"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.And("they click on the next button after selecting the problem source as public road", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.When("User enters the Dirty Area location & clicks next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.And("They enter the relevant details on the public road information pages for a dead a" +
                    "nimal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Public Road - Dog Fouling", SourceLine=23)]
        public virtual void ReportDirtyAreaPublicRoad_DogFouling()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Public Road - Dog Fouling", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 26
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.And("they click on the next button after selecting the problem source as public road", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("User enters the Dirty Area location & clicks next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("They enter the relevant details on the public road information pages for a dog fo" +
                    "uling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Car park", new string[] {
                "mytag2"}, SourceLine=32)]
        public virtual void ReportDirtyAreaCarPark()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Car park", new string[] {
                        "mytag2"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.And("they click on the next button after selecting the problem source as Car Park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("User selects the car park location & clicks next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.And("They enter the relevant details on the car park information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Car park - Dead Animal", new string[] {
                "mytag2"}, SourceLine=41)]
        public virtual void ReportDirtyAreaCarPark_DeadAnimal()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Car park - Dead Animal", new string[] {
                        "mytag2"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.And("they click on the next button after selecting the problem source as Car Park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.When("User selects the car park location & clicks next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And("They enter the relevant details on the car park information pages for a dead anim" +
                    "al", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Car park - Dog Fouling", SourceLine=49)]
        public virtual void ReportDirtyAreaCarPark_DogFouling()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Car park - Dog Fouling", ((string[])(null)));
#line 50
this.ScenarioSetup(scenarioInfo);
#line 51
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.And("they click on the next button after selecting the problem source as Car Park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.When("User selects the car park location & clicks next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 55
 testRunner.And("They enter the relevant details on the public road information pages for a dog fo" +
                    "uling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea In a park", new string[] {
                "mytag3"}, SourceLine=58)]
        public virtual void ReportDirtyAreaInAPark()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea In a park", new string[] {
                        "mytag3"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.And("they click on the next button after selecting the problem source as In a park", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.When("User enters the park details & clicks next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 64
 testRunner.And("They enter the relevant details on the park information pages", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Private Land", new string[] {
                "mytag4"}, SourceLine=67)]
        public virtual void ReportDirtyAreaPrivateLand()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Private Land", new string[] {
                        "mytag4"});
#line 68
this.ScenarioSetup(scenarioInfo);
#line 69
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.And("they click on the next button after selecting the problem source as Private Land", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Somewhere else", new string[] {
                "mytag5"}, SourceLine=74)]
        public virtual void ReportDirtyAreaSomewhereElse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Somewhere else", new string[] {
                        "mytag5"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 76
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 77
 testRunner.When("they select Yes to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.And("they click on the next button after selecting the problem source as Somewhere Els" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.Then("they get a confirmation screen with the case number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Escalation inside 24 hrs", SourceLine=80)]
        public virtual void ReportDirtyAreaEscalationInside24Hrs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Escalation inside 24 hrs", ((string[])(null)));
#line 81
this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
 testRunner.When("they select No to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.And("they enter the case number of the previous case & select next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.When("they confirm yes to case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
 testRunner.Then("they get a message on the screen that they can\'t escalate case as its inside 24 h" +
                    "rs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Escalation outside 24 hrs - Open with Veolia - Allocated to Neigh" +
            "bourhoods team", SourceLine=87)]
        public virtual void ReportDirtyAreaEscalationOutside24Hrs_OpenWithVeolia_AllocatedToNeighbourhoodsTeam()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Escalation outside 24 hrs - Open with Veolia - Allocated to Neigh" +
                    "bourhoods team", ((string[])(null)));
#line 88
this.ScenarioSetup(scenarioInfo);
#line 89
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 90
 testRunner.When("they select No to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.And("they enter the case number of the previous case & select next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.When("they confirm yes to case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
 testRunner.And("they see a message on the screen that case is allocated to contractor & they can " +
                    "provide additional details to the case", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.When("they enter additional case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.Then("they get a confirmation case number & a corresponding email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Escalation outside 24 hrs - Completed by Veolia hence new request" +
            "", SourceLine=96)]
        public virtual void ReportDirtyAreaEscalationOutside24Hrs_CompletedByVeoliaHenceNewRequest()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Escalation outside 24 hrs - Completed by Veolia hence new request" +
                    "", ((string[])(null)));
#line 97
this.ScenarioSetup(scenarioInfo);
#line 98
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 99
 testRunner.When("they select No to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
 testRunner.And("they enter the case number of the previous case & select next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.When("they confirm yes to case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.And("they see a message on the screen that case is completed by contractor & they can " +
                    "provide additional details to reopen the case", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.When("they enter additional case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 104
 testRunner.Then("they get a confirmation case number & a corresponding email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Escalation outside 24 hrs - Veolia needs more information", SourceLine=105)]
        public virtual void ReportDirtyAreaEscalationOutside24Hrs_VeoliaNeedsMoreInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Escalation outside 24 hrs - Veolia needs more information", ((string[])(null)));
#line 106
this.ScenarioSetup(scenarioInfo);
#line 107
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.When("they select No to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.And("they enter the case number of the previous case & select next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.When("they confirm yes to case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 111
 testRunner.And("they see a message on the screen that contractor needs additional details & they " +
                    "can provide details to the case", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.When("they enter additional case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
 testRunner.Then("they get a confirmation case number & a corresponding email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Escalation outside 24 hrs - Not completed by Veolia - Allocated t" +
            "o Neighbourhoods team", SourceLine=114)]
        public virtual void ReportDirtyAreaEscalationOutside24Hrs_NotCompletedByVeolia_AllocatedToNeighbourhoodsTeam()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Escalation outside 24 hrs - Not completed by Veolia - Allocated t" +
                    "o Neighbourhoods team", ((string[])(null)));
#line 115
this.ScenarioSetup(scenarioInfo);
#line 116
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 117
 testRunner.When("they select No to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
 testRunner.And("they enter the case number of the previous case & select next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.When("they confirm yes to case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
 testRunner.And("they see a message on the screen that Not Completed by Veolia for “Too Big /  Pri" +
                    "vate Property/Land /Health &amp; Safety Issue” & they can provide additional det" +
                    "ails to the case", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.When("they enter additional case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
 testRunner.Then("they get a confirmation case number & a corresponding email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("ReportDirtyArea Escalation outside 24 hrs - ID Verde", SourceLine=123)]
        public virtual void ReportDirtyAreaEscalationOutside24Hrs_IDVerde()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReportDirtyArea Escalation outside 24 hrs - ID Verde", ((string[])(null)));
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
 testRunner.Given("User is on the ReportDirtyArea Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.When("they select No to first time report & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
 testRunner.And("they enter the case number of the previous case & select next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.When("they confirm yes to case details & click on next", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
 testRunner.Then("they get a confirmation case number & escalate email sent to ID Verde", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
